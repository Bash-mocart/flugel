---

- name: "deploy nginx" 
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - ACCOUNT_ID: "flugel"
    - CLUSTER_NAME: "flugel"
    - REGION: "us-east-1"
    

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600

  tasks:


  - name: "installing kubectl on localhost"
    shell: |  
         curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
         curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
         echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
         sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
         kubectl version --client

  
  - name: "installing eksctl on localhost"
    shell: |  
         curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
         sudo mv /tmp/eksctl /usr/local/bin
         eksctl version
         
  - name: "installing helm on localhost"
    shell: |  
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm

  - name: "update kubeconfig"
    shell: |  
         aws eks update-kubeconfig --name {{ CLUSTER_NAME }} --region {{ REGION }}

  - name: "deploy nginx"
    shell: |  
          kubectl create namespace flugel-nginx
          kubectl apply -f frontend.yml
          kubectl apply -f frontend-svc.yml

  - name: "deploy backend"
    shell: |  
          kubectl create namespace jumia-backend
          kubectl apply -f backend.yml
          kubectl apply -f backend-svc.yml

  - name: "deploy ingress"
    shell: |  
          kubectl apply -f ingress.yml
  
  - name: "install aws load balancer controller"
    shell: |  
          eksctl utils associate-iam-oidc-provider \
          --region eu-west-3 \
          --cluster {{ CLUSTER_NAME }} \
          --approve

  - name: "create IAM Policy"
    shell: |  
          aws iam create-policy \
            --policy-name AWSLoadBalancerControllerIAMPolicy \
            --policy-document file://iam-policy.json
    
  
  - name: "install aws load balancer controller"
    shell: |  
        eksctl create iamserviceaccount \
          --cluster=eks \
          --namespace=kube-system \
          --name=aws-load-balancer-controller \
          --attach-policy-arn=arn:aws:iam::{{ ACCOUNT_ID }}:policy/AWSLoadBalancerControllerIAMPolicy \
          --approve
    

  - name: "install aws load balancer controller"
    shell: |  
          helm repo add eks https://aws.github.io/eks-charts
          kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"
          helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName={{ CLUSTER_NAME }} --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller
        



          
